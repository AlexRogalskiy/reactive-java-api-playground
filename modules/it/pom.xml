<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.tviplabs.api.playground</groupId>
		<artifactId>reactive-java-api</artifactId>
		<version>1.0.0</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>

	<name>com.tviplabs.api.playground.it</name>
	<url>https://github.com/AlexRogalskiy/reactive-java-api-playground/blob/master/modules/it</url>
	<description>Reactive Java API Integration Tests</description>
	<inceptionYear>2022</inceptionYear>
	<artifactId>reactive-java-api-it</artifactId>
	<packaging>jar</packaging>

	<properties>
		<!-- dependencies -->
		<allure.version>2.16.1</allure.version>
		<assertj.version>3.21.0</assertj.version>
		<aspectj.version>1.9.7</aspectj.version>
		<awaitility.version>4.2.0</awaitility.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>

		<!-- plugins -->
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-cucumber-reporting.version>5.6.2</maven-cucumber-reporting.version>
		<maven-allure-plugin.version>2.10.0</maven-allure-plugin.version>
	</properties>

	<dependencies>
		<!-- Commons dependencies -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>

		<!-- Junit5 dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite</artifactId>
		</dependency>

		<!-- Cucumber dependencies -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
		</dependency>

		<!-- Allure dependencies -->
		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-junit5</artifactId>
			<version>${allure.version}</version>
		</dependency>
		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-cucumber-jvm</artifactId>
			<version>${allure.version}</version>
		</dependency>

		<!-- Assertj dependencies -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
		</dependency>

		<!-- Awaitility dependencies -->
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
		</dependency>

		<!-- Self dependencies -->
		<dependency>
			<groupId>com.tviplabs.api.playground</groupId>
			<artifactId>reactive-java-api-annotations</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.tviplabs.api.playground</groupId>
			<artifactId>reactive-java-api-flow-impl</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.tviplabs.api.playground</groupId>
			<artifactId>reactive-java-api-reactor-impl</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<profiles>
		<!-- Uber jar profile -->
		<profile>
			<id>uber-jar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin.version}</version>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/descriptor.xml</descriptor>
							</descriptors>
							<archive>
								<manifest>
									<mainClass>
										com.tviplabs.api.playground.it.ApplicationTestRunner
									</mainClass>
								</manifest>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>single</id>
								<goals>
									<goal>single</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Integration tests profile -->
		<profile>
			<id>it</id>
			<properties>
				<surefire.commands>
					--enable-preview
				</surefire.commands>
				<surefire.file>
					-Dfile.encoding=${project.build.sourceEncoding}
				</surefire.file>
				<surefire.memory>
					-Xmx1024m
					-XX:ReservedCodeCacheSize=1G
					-Dsun.zip.disableMemoryMapping=true
				</surefire.memory>
				<surefire.network>
					-Djava.net.preferIPv4Stack=true
					-Djdk.net.URLClassPath.disableClassPathURLCheck=true
				</surefire.network>
				<surefire.timezone>
					-Duser.timezone=Europe/Moscow
				</surefire.timezone>
				<surefire.agent>
					-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
				</surefire.agent>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${maven-surefire-plugin.version}</version>
							<configuration>
								<reuseForks>false</reuseForks>
								<forkCount>1</forkCount>
								<useSystemClassLoader>false</useSystemClassLoader>
								<testFailureIgnore>false</testFailureIgnore>
								<forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
								<argLine>
									${surefire.agent}
									${surefire.memory}
									${surefire.file}
									${surefire.network}
									${surefire.timezone}
									${surefire.commands}
								</argLine>
								<classpathDependencyExcludes>
									<classpathDependencyExcludes>org.projectlombok:lombok</classpathDependencyExcludes>
								</classpathDependencyExcludes>
								<properties>
									<property>
										<name>listener</name>
										<value>org.junit.platform.launcher.listeners.SummaryGeneratingListener</value>
									</property>
								</properties>
								<systemProperties>
									<property>
										<name>allure.results.directory</name>
										<value>${project.build.directory}/allure-results</value>
									</property>
									<property>
										<name>allure.reports.directory</name>
										<value>${project.build.directory}/allure-reports</value>
									</property>
								</systemProperties>
							</configuration>
							<dependencies>
								<dependency>
									<groupId>org.aspectj</groupId>
									<artifactId>aspectjweaver</artifactId>
									<version>${aspectj.version}</version>
								</dependency>
								<dependency>
									<groupId>org.apache.maven.surefire</groupId>
									<artifactId>maven-surefire-common</artifactId>
									<version>${maven-surefire-plugin.version}</version>
								</dependency>
							</dependencies>
						</plugin>

						<plugin>
							<groupId>io.qameta.allure</groupId>
							<artifactId>allure-maven</artifactId>
							<version>${maven-allure-plugin.version}</version>
							<configuration>
								<outputDirectory>${project.build.directory}</outputDirectory>
								<reportingOutputDirectory>${project.build.directory}</reportingOutputDirectory>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>

				<!-- Use in lifecycle -->
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>io.qameta.allure</groupId>
						<artifactId>allure-maven</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Reporting profile -->
		<profile>
			<id>reporting</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>net.masterthought</groupId>
							<artifactId>maven-cucumber-reporting</artifactId>
							<version>${maven-cucumber-reporting.version}</version>
							<executions>
								<execution>
									<id>execution</id>
									<phase>verify</phase>
									<goals>
										<goal>generate</goal>
									</goals>
									<configuration>
										<projectName>${project.name}</projectName>
										<!-- output directory for the generated report -->
										<outputDirectory>${project.build.directory}/site/cucumber-reports</outputDirectory>
										<!-- optional, defaults to outputDirectory if not specified -->
										<inputDirectory>${project.build.directory}/cucumber</inputDirectory>
										<jsonFiles>
											<!-- supports wildcard or name pattern -->
											<param>**/*.json</param>
										</jsonFiles>
										<!-- optional, defaults to outputDirectory if not specified -->
										<classificationDirectory>${project.build.directory}/classifications</classificationDirectory>
										<!--shows additional column in report - 'Device'-->
										<!--                            <parallelTesting>true</parallelTesting>-->
										<!-- optional, set true to fail build on test failures -->
										<checkBuildResult>false</checkBuildResult>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

	<build>
		<defaultGoal>clean package</defaultGoal>
		<finalName>${project.groupId}-${project.artifactId}-${project.version}</finalName>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>
	</build>
</project>
